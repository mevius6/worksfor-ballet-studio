@use './config';

$lib: 'leaflet';

:root {
  --_top-tip:
    conic-gradient(
      from 150deg at top,
      #0000,
      #000 1deg 60deg,
      #0000 61deg
    ) top / 100% 50% no-repeat;
  --_right-tip:
    conic-gradient(
      from -120deg at right,
      #0000,
      #000 1deg 60deg,
      #0000 61deg
    ) right / 50% 100% no-repeat;
  --_bottom-tip:
    conic-gradient(
      from -30deg at bottom,
      #0000,
      #000 1deg 60deg,
      #0000 61deg
    ) bottom / 100% 50% no-repeat;
  --_left-tip:
    conic-gradient(
      from 60deg at left,
      #0000,
      #000 1deg 60deg,
      #0000 61deg
    ) left / 50% 100% no-repeat;
}

// 🍃 https://github.com/Leaflet/Leaflet
@layer leaflet {
  // sub-layers order: flow, stack, etc.
  @layer
    positioning,
    stacking,
    animations,
    cursors,
    interactivity,
    visual,
    container,
    toolbar,
    controls,
    popup,
    tooltip,
    custom;

  // 🍂
  .leaflet {
    --map-bleed: var(--spacer-2x); // 10px;
    --map-border-radius: 3px;

    @layer positioning {
      &-pane,
      &-tile,
      &-marker-icon,
      &-marker-shadow,
      &-tile-container,
      &-pane > svg,
      &-pane > canvas,
      &-zoom-box,
      &-image-layer,
      &-layer {
        position: absolute;
        inset-block-start: 0;
        inset-inline-start: 0;
      }

      @layer stacking {
        &-tile,
        &-marker-icon,
        &-marker-shadow {
          user-select: none;

          /* autoprefixer: ignore next */
          -webkit-user-drag: none;
        }

        &-marker-icon,
        &-marker-shadow { display: block; }

        &-tile {
          visibility: var(--tile-vis, hidden);
          filter: inherit;

          &-loaded { --tile-vis: inherit; }

          .leaflet-zoom-box {
            z-index: var(--zi, 800);
            inline-size: 0;
            block-size: 0;
          }
        }

        &-safari &-tile {
          /* autoprefixer: ignore next */
          image-rendering: -webkit-optimize-contrast;
        }

        &-safari &-tile-container {
          --map-tile-size: 1600px;

          inline-size: var(--map-tile-size);
          block-size: var(--map-tile-size);
          aspect-ratio: 1;

          /* autoprefixer: ignore next */
          -webkit-transform-origin: 0 0;
        }

        &-overlay-pane svg {
          /* autoprefixer: ignore next */
          -moz-user-select: none;
        }

        &-map-pane canvas { z-index: var(--zi, 1); }
        &-map-pane svg    { z-index: var(--zi, 2); }
        &-tile-pane       { z-index: var(--zi, 2); }
        &-overlay-pane    { z-index: var(--zi, 4); }
        &-shadow-pane     { z-index: var(--zi, 5); }
        &-marker-pane     { z-index: var(--zi, 6); }
        &-tooltip-pane    { z-index: var(--zi, 7); }
        &-popup-pane      { z-index: var(--zi, 8); }

        &-vml-shape {
          inline-size: 1px;
          block-size: 1px;
          aspect-ratio: 1;
        }

        &-control {
          position: relative;
          z-index: var(--zi, 800);
          pointer-events: visiblePainted;
          pointer-events: auto;

          .leaflet-top    & { margin-block-start: 0; }
          .leaflet-right  & { margin-inline-end: var(--map-bleed, 0); }
          .leaflet-bottom & { margin-block-end: var(--map-bleed, 0); }
          .leaflet-left   & { margin-inline-start: var(--map-bleed, 0); }
        }

        &-bottom,
        &-top {
          position: absolute;
          z-index: var(--zi, 1000);
          pointer-events: none;
        }

        &-top    { inset-block-start: 0; }
        &-right  { inset-inline-end: 0; }
        &-bottom { inset-block-end: 0; }
        &-left   { inset-inline-start: 0; }
      }
    }

    // zoom and fade animations
    @layer animations {
      &-fade-anim &-tile {
        will-change: opacity;
      }

      &-fade-anim &-popup {
        opacity: 0;
        transition: opacity 300ms var(--ease-out-cubic);
      }

      &-fade-anim &-map-pane &-popup {
        opacity: 1;
      }

      &-zoom-animated {
        transform-origin: 0 0;
      }

      &-zoom-anim &-zoom-animated {
        will-change: transform;
        transition: transform 250ms cubic-bezier(0, 0, 0.25, 1);
      }

      &-pan-anim &-tile,
      &-zoom-anim &-tile {
        transition: none;
      }

      &-zoom-anim &-zoom-hide { visibility: hidden; }
    }

    @layer cursors {
      &-interactive {
        cursor: pointer;
      }

      &-grab {
        cursor: grab;
      }

      &-crosshair,
      &-crosshair &-interactive {
        cursor: crosshair;
      }

      &-control,
      &-popup-pane {
        cursor: auto;
      }

      &-dragging &-grab,
      &-dragging &-grab &-interactive,
      &-dragging &-marker-draggable {
        cursor: move;
        cursor: grabbing;
      }
    }

    // marker & overlays interactivity
    @layer interactivity {
      &-marker-icon,
      &-marker-shadow,
      &-image-layer,
      &-pane > svg path,
      &-tile-container {
        pointer-events: none;
      }

      &-marker-icon.leaflet-interactive,
      &-image-layer.leaflet-interactive,
      &-pane > svg path.leaflet-interactive,
      svg.leaflet-image-layer.leaflet-interactive path {
        pointer-events: auto;
      }
    }

    // visual tweaks
    @layer visual {
      &-zoom-box {
        background: inherit;
        border: 0;
        opacity: .5;
      }
    }

    @layer container {
      &-container {
        overflow: hidden;
        color: var(--foreground);
        background: var(--background);
        outline: 0;
        touch-action: none;
        // min-block-size: 100svh;

        *,
        ::after,
        ::before { box-sizing: border-box; }

        .marker-description img { margin-block-end: 10px; }

        .leaflet-marker-pane img,
        .leaflet-overlay-pane svg,
        .leaflet-tile-pane img,
        .leaflet-image-layer { max-inline-size: none !important; }

        :where(.leaflet-touch-zoom) { touch-action: pan-x pan-y;}
        :where(.leaflet-touch-drag) {
          touch-action: pinch-zoom;
          :where(.leaflet-touch-drag) { touch-action: none; }
        }
      }
    }

    // general toolbar styles <-- has custom styles
    @layer toolbar {
      &-bar,
      &-control-layers {
        background-color: transparent;
        border: 0;
        border-radius: var(--map-border-radius);
        box-shadow: none;
      }

      &-bar {
        display: flex;
        flex-direction: column;

        > * + * { margin-block-start: var(--icon-size); }

        .svg-inline {
          display: flex;
          max-inline-size: 100%;
          block-size: auto;
          filter: drop-shadow(-2px 3px 2px hsl(0 0% 0% / 0.25));
          align-items: center;
          justify-content: space-around;
          padding: var(--denser);

          &:is(:hover, :focus) { filter: brightness(120%); }
        }

        a {
          display: block;
          overflow: visible;
          aspect-ratio: 1;
          min-inline-size: var(--btn-min-size);
          min-block-size: var(--btn-min-size);
          border-radius: 0.5ch;
          // background-color: var(--accent-shade);
          background-color: var(--background);
          box-shadow: 0 8px 24px var(--shadow);

          &:not([class*='disabled']):focus { transform: scale(0.8); }
        }
      }

      &-bar &-disabled {
        cursor: not-allowed;
        filter: grayscale(1);
      }
    }

    // zoom control, attribution and scale controls
    @layer controls {
      &-control-zoom-in,
      &-control-zoom-out {
        display: block;
        text-indent: -999em;
        content: '';
        border: 0;
      }

      &-container &-control-attribution {
        padding: var(--denser) var(--spacer);
        margin: 0;
        font-size: 0.75em;
        line-height: 1.25;
        box-shadow: none;

        [data-theme-style='light'] & {
          background-color: var(--background-a75);
        }

        [data-theme-style='dark'] & {
          background-color: var(--background-a75);
        }
      }

      &-touch :where(.leaflet-bar, .leaflet-control-layers) {
        background-clip: padding-box;
      }
    }

    &-div-icon { background: transparent; }
    &-editing-icon { border-radius: var(--map-border-radius); }
    &-attribution-flag { display: none !important; }

    @layer popup {
      &-popup {
        position: absolute;
        pointer-events: none;

        min-inline-size: min-content;
        inline-size: fit-content;

        &-content-wrapper {
          padding: 0;
          text-align: left;
          pointer-events: all;
        }

        &-content {
          // padding: 1.5rem;
          padding: 2ch;
          margin: 0;
          line-height: inherit;
        }

        &-tip-container {
          display: none;
          position: relative;
          width: 20px;
          height: 20px;
          margin: 0 auto;
        }

        &-tip {
          width: 0;
          height: 0;
          margin: 0;
          border-top: 10px solid var(--background);
          border-right: 10px solid transparent;
          border-left: 10px solid transparent;
          box-shadow: none;
        }

        &-close-button {
          position: absolute;
          inset-block-start: 0;
          inset-inline-end: 0;
          font-size: 1rem;
          font-weight: 500;
          text-align: center;
          // text-indent: -999em;
          pointer-events: all;
          border-radius: 0 1ch 0;
          transition:
            color 150ms var(--ease-in-out-quart),
            background-color 150ms var(--ease-in-out-quart);

          &:hover {
            color: var(--foreground);
            background-color: var(--accent);
          }
        }

        &-scrolled { overflow: auto; }
      }
    }

    @layer tooltip {
      &-tooltip {
        position: absolute;
        padding: 5px;
        white-space: nowrap;
        pointer-events: none;
        user-select: none;
        background-color: var(--background);
        border: 1px solid var(--foreground);
        border-radius: var(--map-border-radius);

        &.leaflet-clickable {
          pointer-events: auto;
          cursor: pointer;
        }

        // directions
        &-bottom::before,
        &-left::before,
        &-right::before,
        &-top::before {
          position: absolute;
          pointer-events: none;
          content: '';
          background: 0 0;
          border: 5px solid transparent;
        }

        &-bottom {
          margin-top: 5px;

          &::before {
            top: 0;
            margin-top: -15px;
            margin-left: -5px;
            border-bottom-color: currentcolor;
          }
        }

        &-top {
          margin-top: -5px;

          &::before {
            bottom: 0;
            margin-bottom: -10px;
            border-top-color: currentcolor;
          }
        }

        &-bottom::before,
        &-top::before {
          left: 50%;
          margin-left: -5px;
        }

        &-left {
          margin-left: -5px;

          &::before {
            right: 0;
            margin-right: -10px;
            border-left-color: currentcolor;
          }
        }

        &-right {
          margin-left: 5px;

          &::before {
            left: 0;
            margin-left: -10px;
            border-right-color: currentcolor;
          }
        }

        &-left::before,
        &-right::before {
          top: 50%;
          margin-top: -5px;
        }
      }
    }
  }

  .lvml {
    position: absolute;
    display: inline-block;
  }
}

@layer leaflet.custom {
  .leaflet-bar a,
  .leaflet-control-layers-toggle,
  .leaflet-popup-close-button,
  .map-tooltip.closable .close,
  .mapbox-button-icon::before,
  .mapbox-icon {
    --icon-size: 2ch;

    display: inline-block;
    inline-size: var(--icon-size);
    block-size: var(--icon-size);
    content: '';
    filter: none; // override
  }

  :where([class*=top][class*=right]) {
    display: flex;
    block-size: 100%;
    margin-inline-end: var(--spacer-2x);

    & > :is([class*=bar][class*=control]) { margin-block: auto; }
  }
}

//
// Custom map styles
//

/* stylelint-disable-next-line selector-max-specificity */
#map {
  inline-size: calc(100% - var(--spacer-4x) * 2);
  block-size: 100%;
  max-block-size: 100svh;
  aspect-ratio: 1;
  margin: 0 auto;
  font: inherit;

  @include config.respond('tablet') { inline-size: 100%; }
}

.marker-icon {
  filter: drop-shadow(-2px 3px 2px hsl(0 0% 0% / 0.4));
  transition: filter 600ms var(--easing);

  &:is(:hover, :focus) {
    filter:
      drop-shadow(-2px 3px 2px hsl(0 0% 0% / 0.4))
      brightness(120%);
  }
}

.microdata-popup {
  --_triangle-size: .75rem;

  // width: calc(50% - 2ch);
  // min-width: 20ch;
  // max-width: 40ch;
  inline-size: clamp(25ch, 50% - 2ch, 39ch);
  margin-block-end: var(--_triangle-size);

  .leaflet-popup-content-wrapper {
    color: var(--foreground);
    background-color: var(--background);
    border-radius: 1ch;
  }

  // https://github.com/argyleink/gui-challenges/tree/main/tooltips
  &::after {
    --_p-inline: 1.5ch;
    --_p-block: .75ch;
    --_tip: var(--_bottom-tip);
    content: "";
    background: var(--background);
    position: absolute;
    z-index: -1;
    inset: 0;
    mask: var(--_tip);
    inset-block-end: calc(var(--_triangle-size) * -1);
    border-block-end: var(--_triangle-size) solid transparent;
  }

  .leaflet-popup-content {
    --flow-space: var(--spacer-2x);

    display: flex;
    flex-direction: column;

    * + * {
      margin-block-start: var(--flow-space);
    }

    h4 {
      margin: 0;
      --px-size: 28;
      font-size: var(--px2rem);
      line-height: calc(1ex / 0.37);
    }

    b { font: inherit; }

    div {
      display: flex;
      flex-direction: column;

      span { --flow-space: var(--spacer); }
    }

    b, strong {
      // padding-block-end: var(--denser);

      color: var(--accent-shade);
      text-transform: uppercase;
      font-size: .75em;
      letter-spacing: var(--letter-spacing-4);
      font-feature-settings: 'case' 1;
    }

    span + span { display: block; }

    ul { gap: var(--denser); --flow-space: var(--denser); }
    li {
      display: inline-flex;
      flex-direction: row;
      align-items: center;
      gap: var(--spacer)
    }

    li > [data-icon] {
      --icon-size: .75rem;

      display: block;
      inline-size: var(--icon-size);
      block-size: var(--icon-size);
      background-repeat: no-repeat;
      background-position: center;
      background-size: contain;
      background-image: url('../images/metro.svg');
    }
  }
}

.extra-controls {
  --list-gap: 0;
  --grad-hsl: var(--sw-redend-point);

  position: absolute;
  inset-block-start: 0;
  z-index: 1009;
  display: none;
  max-block-size: 100%;
  padding: var(--spacer-4x);
  overflow-y: auto;
  flex-direction: column;
  background:
    linear-gradient(
      135deg,
      hsl(var(--grad-hsl)) 0%,
      hsl(var(--grad-hsl) / 0.25) 100%
    );
  border-radius: 3px;
  backdrop-filter: blur(6px);

  [data-theme-style='light'] & {
    --grad-hsl: var(--sw-malted-milk);
  }

  [name='location']:checked ~ label,
  [name='location']:focus ~ label {
    background-color: var(--background);
  }

  label {
    display: flex;
    flex-flow: column;
    padding: 2ch;
    cursor: pointer;
    border-radius: inherit;
    transition: background-color 175ms var(--easing);

    a {
      --arrow: '';
      font-family: inherit;

      &[href*='tel:'] { align-self: flex-start; }
    }
  }

  &__item {
    position: relative;
    border-radius: inherit;
    grid-template-columns: auto;

    &::before {
      --icon-size: 1rem;
      --sp: 1ex;

      position: absolute;
      // inset-block-start: 50%;
      // inset-inline-end: 0;
      // transform: translatey(-50%) translatex(50%) scale(var(--s,0.75));
      inset-block-start: calc(50% - (var(--icon-size) + var(--sp) / 4));
      inset-inline-end: calc(-1 * (var(--icon-size) + var(--sp) / 4));
      transform: scale(var(--s,0.75));
      padding: var(--sp);

      font-family: inherit;
      font-weight: 500;
      line-height: 1.1;
      opacity: var(--a, 1);
      place-self: start;
      font-feature-settings: 'tnum' 1;
      will-change: transform;
      transform-origin: 50% 50%;
      transition: transform 200ms var(--ease-spring);
      background-color: var(--background);
    }

    &:hover { --s: 1; }
  }

  .social {
    --icon-size: 1.25rem;

    padding-block-start: var(--spacer-3);
    grid-template-columns:
      repeat(
        auto-fit,
        minmax(var(--icon-size), max-content)
      );
    place-items: center;
    column-gap: var(--icon-size);
  }

  @include config.respond('tablet') { display: flex; }
  // @media (any-hover: hover) { display: flex; }
}
